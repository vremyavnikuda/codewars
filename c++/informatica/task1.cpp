#include <iostream>
/*
Задание 1
Описать функцию min (k) для определения минимального элемента последовательности чисел,
находящую минимум среди последних чисел, начиная с k-го.
На ввод указываеются значение int n, где n - длина последовательности.
*/

// Рекурсивная функция для поиска минимального элемента в массиве
/*
int findMinRec(const int arr[], int n) {
    if (n == 1) {
        return arr[0]; // Базовый случай: если остался только один элемент, вернуть его
    }

    // Рекурсивный случай: сравниваем текущий элемент с минимальным элементом из оставшихся
    int rest_min = findMinRec(arr, n - 1);
    return (arr[n - 1] < rest_min) ? arr[n - 1] : rest_min;
}

int main() {
    int length;

    // Ввод длины массива
    std::cout << "Введите длину массива: ";
    std::cin >> length;

    if (length <= 0) {
        std::cerr << "Ошибка: Некорректная длина массива." << std::endl;
        return 1;
    }

    // Создание массива с указанной длиной
    int* myArray = new int[length];

    // Заполнение массива данными
    for (int i = 0; i < length; ++i) {
        std::cout << "Введите элемент " << i + 1 << ": ";
        std::cin >> myArray[i];
    }

    // Проверка, если массив состоит из одного числа
    if (length == 1) {
        std::cout << "Массив состоит из одного числа: " << myArray[0] << std::endl;
    } else {
        // Поиск минимального значения в массиве
        int min_value = findMinRec(myArray, length);
        std::cout << "Минимальное значение в массиве: " << min_value << std::endl;
    }

    // Освобождение памяти
    delete[] myArray;

    return 0;
}
*/
